services:
  app:
    container_name: customer
    build:
      dockerfile: docker/java/Dockerfile
      context: .
      target: base
    ports:
      - '8080:8080'
    networks:
      - fooddelivery_network
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - postgresql-master
      - postgresql-slave
    profiles: ['full']
  app-unit-test:
    build:
      dockerfile: docker/java/Dockerfile
      context: .
      target: test
    volumes:
      - .:/app
    profiles: [ 'unit' ]
  postgresql-master:
    image: registry.gitlab.com/food-delivery5161742/container-registry/postgres:14.9
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=admin123
      - POSTGRESQL_DATABASE=customer_db
    networks:
      - fooddelivery_network
    profiles: ['infra','full']
  postgresql-slave:
    image: registry.gitlab.com/food-delivery5161742/container-registry/postgres:14.9
    ports:
      - '5433:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PASSWORD=admin123
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
    networks:
      - fooddelivery_network
    profiles: [ 'infra','full']
  rabbitmq:
    image: registry.gitlab.com/food-delivery5161742/container-registry/rabbit:3
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - default
      - fooddelivery_network
    profiles: [ 'infra','full']
volumes:
  postgresql_master_data:

networks:
  fooddelivery_network:
    driver: bridge